		Приложение - Recipe-app (кулинарное приложение)

Немного о проекте, о его работе :
	В проекте используется MVC, архитектура не сложная, поэтому весь проект разбит на файлы;



LAB №2
	В Models можно увидеть структуру, по которой я получаю данные (файл Networking -> Meal.swift) 
	В Networking описано выполнение запроса с сайта edamam.com, а в файле NetworkingHelper.swift происходит сам запрос, выполняющийся через URLSession (для запроса создана отдельная функция func requestMeals(далее функция) ). Сам по себе NetworkingHelper - singleton, поэтому функцию запроса вызываем в контроллере. В функции с запросом сделан 
completion f: @escaping ([[String: Any]]) -> (), предназначенный для присвоения всего в массив в контроллере после обработки запроса. Далее в контроллере MealsCollectionViewController.swift вызываем функцию, и в замыкании после функции присваиваем массив, полученный в запросе. Запрос выполняется долго сам по себе, поэтому вызываем функцию, после которой обновляем таблицу. Таблицу приходится обновлять в главном потоке, чтобы обновился интерфейс (потому что функция и замыкание в другом потоке).
В контроллере делаем рекурсию на функцию, чтобы запрос выполнялся не слишком долго (а вообще зависит все от соединения/интернета ). 
Выполняется 5 запросов по 8 рецептов, каждый запрос работает по принципу "отработал - обновил таблицу". После всего выводим все в collectionController. 



LAB №3
	Когда заходим в приложение, на главном экране есть три кнопки Recipes. Одна открывает экран с рецептами, где можно нажать на рецепт и сверху на экране рецепта будет плюсик. Если на него нажать - рецепт записывается в Core Data. Вторая кнопка Food - она открывает экран с едой, просто экран с разной едой. А третья кнопка My food - она открывает экран с сохраненными рецептами, которые мы сохранили, нажимая на плюсик.
Если кратко - суть Core Data в том, что если нажать на "+" на экране какого-то рецепта,
то он будет висеть в таблице в Мy food.
